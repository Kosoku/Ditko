{"Functions.html#/c:@F@KDIMainScreenScale":{"name":"KDIMainScreenScale","abstract":"<p>Returns the scale of the main screen for the current platform. This calls through to KDIScreenScale(), passing nil.</p>"},"Functions.html#/c:@F@KDIScreenScale":{"name":"KDIScreenScale","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@KDICGSizeAdjustedForMainScreenScale":{"name":"KDICGSizeAdjustedForMainScreenScale","abstract":"<p>Returns a new size after multiplying the width and height by the main screen scale.</p>"},"Functions.html#/c:@F@KDICGSizeAdjustedForScreenScale":{"name":"KDICGSizeAdjustedForScreenScale","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@KDITextFromTextInput":{"name":"KDITextFromTextInput","abstract":"<p>Returns the text from the text input.</p>"},"Functions.html#/c:@F@KDISelectedRangeFromTextInput":{"name":"KDISelectedRangeFromTextInput","abstract":"<p>Returns the selected range from the text input.</p>"},"Functions.html#/c:@F@KDITextRangeFromTextInputRange":{"name":"KDITextRangeFromTextInputRange","abstract":"<p>Returns the text range from text input range.</p>"},"Protocols/KDIBorderedView.html#/c:objc(pl)KDIBorderedView(py)borderOptions":{"name":"borderOptions","abstract":"<p>Set and get the border options of the receiver.</p>","parent_name":"KDIBorderedView"},"Protocols/KDIBorderedView.html#/c:objc(pl)KDIBorderedView(py)borderWidth":{"name":"borderWidth","abstract":"<p>Undocumented</p>","parent_name":"KDIBorderedView"},"Protocols/KDIBorderedView.html#/c:objc(pl)KDIBorderedView(py)borderWidthRespectsScreenScale":{"name":"borderWidthRespectsScreenScale","abstract":"<p>Set and get whether the borderWidth of the receiver respects the screen scale of the receiver. If YES, this borderWidth will scale appropriately on retina screens. For example, a borderWidth of 1.0 would display as 2.0 on a retina screen.</p>","parent_name":"KDIBorderedView"},"Protocols/KDIBorderedView.html#/c:objc(pl)KDIBorderedView(py)borderEdgeInsets":{"name":"borderEdgeInsets","abstract":"<p>Undocumented</p>","parent_name":"KDIBorderedView"},"Protocols/KDIBorderedView.html#/c:objc(pl)KDIBorderedView(py)borderColor":{"name":"borderColor","abstract":"<p>Undocumented</p>","parent_name":"KDIBorderedView"},"Protocols/KDIBorderedView.html#/c:objc(pl)KDIBorderedView(im)setBorderColor:animated:":{"name":"-setBorderColor:animated:","abstract":"<p>Undocumented</p>","parent_name":"KDIBorderedView"},"Protocols/KDIBorderedView.html":{"name":"KDIBorderedView","abstract":"<p>KDIBorderedView is a protocol that describes a view that can display borders around its content. On iOS, CALayer sublayers are used to display the borders in conforming classes (KDIView, KDITextField, KDITextView, KDIButton, KDILabel). On macOS, drawRect: is overriden to display the borders in conforming classes (KDIView).</p>"},"Enums/KDIBorderOptions.html#/c:@E@KDIBorderOptions@KDIBorderOptionsNone":{"name":"KDIBorderOptionsNone","abstract":"<p>No borders are displayed.</p>","parent_name":"KDIBorderOptions"},"Enums/KDIBorderOptions.html#/c:@E@KDIBorderOptions@KDIBorderOptionsTop":{"name":"KDIBorderOptionsTop","abstract":"<p>The top border is displayed.</p>","parent_name":"KDIBorderOptions"},"Enums/KDIBorderOptions.html#/c:@E@KDIBorderOptions@KDIBorderOptionsLeft":{"name":"KDIBorderOptionsLeft","abstract":"<p>The left border is displayed.</p>","parent_name":"KDIBorderOptions"},"Enums/KDIBorderOptions.html#/c:@E@KDIBorderOptions@KDIBorderOptionsBottom":{"name":"KDIBorderOptionsBottom","abstract":"<p>The bottom border is displayed.</p>","parent_name":"KDIBorderOptions"},"Enums/KDIBorderOptions.html#/c:@E@KDIBorderOptions@KDIBorderOptionsRight":{"name":"KDIBorderOptionsRight","abstract":"<p>The right border is displayed.</p>","parent_name":"KDIBorderOptions"},"Enums/KDIBorderOptions.html#/c:@E@KDIBorderOptions@KDIBorderOptionsTopAndBottom":{"name":"KDIBorderOptionsTopAndBottom","abstract":"<p>Top and bottom borders are displayed.</p>","parent_name":"KDIBorderOptions"},"Enums/KDIBorderOptions.html#/c:@E@KDIBorderOptions@KDIBorderOptionsLeftAndRight":{"name":"KDIBorderOptionsLeftAndRight","abstract":"<p>Left and right borders are displayed.</p>","parent_name":"KDIBorderOptions"},"Enums/KDIBorderOptions.html#/c:@E@KDIBorderOptions@KDIBorderOptionsAll":{"name":"KDIBorderOptionsAll","abstract":"<p>All borders are displayed.</p>","parent_name":"KDIBorderOptions"},"Enums/KDIBorderOptions.html":{"name":"KDIBorderOptions","abstract":"<p>Typedef for possible mask options describing the border options of the receiver.</p>"},"Constants.html#/c:@DitkoVersionNumber":{"name":"DitkoVersionNumber","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@DitkoVersionString":{"name":"DitkoVersionString","abstract":"<p>Undocumented</p>"},"Classes/KDIView.html#/c:objc(cs)KDIView(im)layoutSubviews":{"name":"-layoutSubviews","abstract":"<p>Undocumented</p>","parent_name":"KDIView"},"Classes/KDIGradientView.html#/c:objc(cs)KDIGradientView(py)colors":{"name":"colors","abstract":"<p>Set and get the colors of the underlying CAGradientLayer.</p>","parent_name":"KDIGradientView"},"Classes/KDIGradientView.html#/c:objc(cs)KDIGradientView(py)locations":{"name":"locations","abstract":"<p>Set and get the locations of the underlying CAGradientLayer.</p>","parent_name":"KDIGradientView"},"Classes/KDIGradientView.html#/c:objc(cs)KDIGradientView(py)startPoint":{"name":"startPoint","abstract":"<p>The start point of the underlying CAGradientLayer.</p>","parent_name":"KDIGradientView"},"Classes/KDIGradientView.html#/c:objc(cs)KDIGradientView(py)endPoint":{"name":"endPoint","abstract":"<p>The end point of the underlying CAGradientLayer.</p>","parent_name":"KDIGradientView"},"Classes/KDIBadgeView.html#/c:objc(cs)KDIBadgeView(py)highlighted":{"name":"highlighted","abstract":"<p>Set and get the highlighted state of the view.</p>","parent_name":"KDIBadgeView"},"Classes/KDIBadgeView.html#/c:objc(cs)KDIBadgeView(py)badge":{"name":"badge","abstract":"<p>Set and get the badge value of the receiver.</p>","parent_name":"KDIBadgeView"},"Classes/KDIBadgeView.html#/c:objc(cs)KDIBadgeView(py)badgeForegroundColor":{"name":"badgeForegroundColor","abstract":"<p>Undocumented</p>","parent_name":"KDIBadgeView"},"Classes/KDIBadgeView.html#/c:objc(cs)KDIBadgeView(py)badgeBackgroundColor":{"name":"badgeBackgroundColor","abstract":"<p>Undocumented</p>","parent_name":"KDIBadgeView"},"Classes/KDIBadgeView.html#/c:objc(cs)KDIBadgeView(py)badgeHighlightedForegroundColor":{"name":"badgeHighlightedForegroundColor","abstract":"<p>Undocumented</p>","parent_name":"KDIBadgeView"},"Classes/KDIBadgeView.html#/c:objc(cs)KDIBadgeView(py)badgeHighlightedBackgroundColor":{"name":"badgeHighlightedBackgroundColor","abstract":"<p>Undocumented</p>","parent_name":"KDIBadgeView"},"Classes/KDIBadgeView.html#/c:objc(cs)KDIBadgeView(py)badgeFont":{"name":"badgeFont","abstract":"<p>Undocumented</p>","parent_name":"KDIBadgeView"},"Classes/KDIBadgeView.html#/c:objc(cs)KDIBadgeView(py)badgeCornerRadius":{"name":"badgeCornerRadius","abstract":"<p>Undocumented</p>","parent_name":"KDIBadgeView"},"Classes/KDIBadgeView.html#/c:objc(cs)KDIBadgeView(py)badgeEdgeInsets":{"name":"badgeEdgeInsets","abstract":"<p>Undocumented</p>","parent_name":"KDIBadgeView"},"Classes/KDIBadgeView.html":{"name":"KDIBadgeView","abstract":"<p>Undocumented</p>"},"Classes/KDIGradientView.html":{"name":"KDIGradientView","abstract":"<p>Undocumented</p>"},"Classes/KDIView.html":{"name":"KDIView","abstract":"<p>KDIView is a UIView/NSView subclass that provides state change methods on macOS. It also conforms to KDIBorderedView, allowing it to display borders.</p>"},"Categories/NSURL%28KDIExtensions%29.html#/c:objc(cs)NSURL(py)KDI_effectiveIcon":{"name":"KDI_effectiveIcon","abstract":"<p>Returns the value associated with the NSURLEffectiveIconKey key or nil if no such value exists.</p>","parent_name":"NSURL(KDIExtensions)"},"Categories/NSParagraphStyle%28KDIExtensions%29.html#/c:objc(cs)NSParagraphStyle(cm)KDI_paragraphStyleWithCenterTextAlignment":{"name":"+KDI_paragraphStyleWithCenterTextAlignment","abstract":"<p>Calls <code>[self KDI_paragraphStyleWithTextAlignment:]</code>, passing NSTextAlignmentCenter.</p>","parent_name":"NSParagraphStyle(KDIExtensions)"},"Categories/NSParagraphStyle%28KDIExtensions%29.html#/c:objc(cs)NSParagraphStyle(cm)KDI_paragraphStyleWithRightTextAlignment":{"name":"+KDI_paragraphStyleWithRightTextAlignment","abstract":"<p>Calls <code>[self KDI_paragraphStyleWithTextAlignment:]</code>, passing NSTextAlignmentRight.</p>","parent_name":"NSParagraphStyle(KDIExtensions)"},"Categories/NSParagraphStyle%28KDIExtensions%29.html#/c:objc(cs)NSParagraphStyle(cm)KDI_paragraphStyleWithTextAlignment:":{"name":"+KDI_paragraphStyleWithTextAlignment:","abstract":"<p>Returns a paragraph style with provided text alignment.</p>","parent_name":"NSParagraphStyle(KDIExtensions)"},"Categories/NSObject%28KDIExtensions%29.html#/c:objc(cs)NSObject(py)KDI_customConstraints":{"name":"KDI_customConstraints","abstract":"<p>Convenience property to set and get the custom constraints managed by the receiver. Setting this will deactivate the old custom constraints and active the new custom constraints.</p>","parent_name":"NSObject(KDIExtensions)"},"Categories/NSObject%28KDIExtensions%29.html":{"name":"NSObject(KDIExtensions)","abstract":"<p>Undocumented</p>"},"Categories/NSParagraphStyle%28KDIExtensions%29.html":{"name":"NSParagraphStyle(KDIExtensions)","abstract":"<p>Undocumented</p>"},"Categories/NSURL%28KDIExtensions%29.html":{"name":"NSURL(KDIExtensions)","abstract":"<p>Undocumented</p>"},"Categories.html":{"name":"Categories","abstract":"<p>The following categories are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"}}